from tf import *
from db import *
from gd import * 
from datetime import datetime


list_dbs_clt_activos = [db_soi, db_meca, db_sims, db_sipe, db_tas, db_sirac]

path_exit = "/home/ale1726/proyects/datalake/clientes/data"

path_logs = "/home/ale1726/proyects/datalake/clientes/data/logs"

date_now = datetime.now().strftime("%d_%m_%Y") 

querys_ctls_activos = {
    "MECA" : """
        WITH ClientesVig AS (
            SELECT CLI_CLAVE, CLI_NOMBRE, CLI_EST_CLAVE, CLI_NACIONALIDAD, CLI_DIRECCION, 
                   CLI_EDO_CLAVE, CLI_EDO_PAI_CLAVE, CLI_TELEFONO, CLI_RFC_LETRAS, 
                   CLI_RFC_FECHA, CLI_RFC_HOMO, CLI_TDC_CLAVE
            FROM MECA.CAPF_CLIENTES 
            WHERE CLI_EST_CLAVE = 'VIG'
        ),
        ClientesPorArea AS (
            SELECT LISTAGG(ca.ARE_DESCRIPCION, ', ') WITHIN GROUP (ORDER BY ca.ARE_DESCRIPCION) AS descripciones, 
                   ccpa.CAR_CLI_CLAVE
            FROM MECA.CAPF_CLIENTES_POR_AREA ccpa
            INNER JOIN MECA.CAPF_AREAS ca ON ccpa.CAR_ARE_CLAVE = ca.ARE_CLAVE
            GROUP BY ccpa.CAR_CLI_CLAVE
        ),
        ClientesConDescripcion AS (
            SELECT r1.descripciones, cc.*
            FROM ClientesVig cc
            LEFT JOIN ClientesPorArea r1 ON r1.CAR_CLI_CLAVE = cc.CLI_CLAVE
        ),
        ClientesConTipo AS (
            SELECT r2.*, tp.TDC_DESCRIPCION
            FROM ClientesConDescripcion r2
            INNER JOIN MECA.CAPF_TIPOS_DE_CLIENTES tp ON tp.TDC_CLAVE = r2.CLI_TDC_CLAVE
        ),
        CLIENTES_CON_EDO AS (
			SELECT CCTI.*, CE.EDO_DESCRIPCION
			FROM ClientesConTipo CCTI
			LEFT JOIN MECA.CAPF_ESTADOS CE ON (CCTI.CLI_EDO_PAI_CLAVE = CE.EDO_PAI_CLAVE) AND (CCTI.CLI_EDO_CLAVE = CE.EDO_CLAVE)
		), CLIENTES_CON_PAIS AS (
			SELECT CCED.*, CAPA.PAI_DESCRIPCION
			FROM CLIENTES_CON_EDO CCED
			LEFT JOIN MECA.CAPF_PAISES CAPA ON CCED.CLI_EDO_PAI_CLAVE = CAPA.PAI_CLAVE
		),
        movimientos_tipo AS (
            SELECT mm.MOV_CLI_CLAVE, mm.MOV_FOLIO, mm.MOV_OPE_FOLIO, mt.TMO_DESCRIPCION, mm.MOV_DIV_CLAVE_SWIFT, 
            mm.MOV_CMV_CLAVE, mm.MOV_MPA_CLAVE, mm.MOV_NUM_TITULOS, mm.MOV_PRECIO, mm.MOV_IMPORTE, mm.MOV_FECHA_PACTADA, 
            mm.MOV_FECHA_PAGO, mm.MOV_FECHA_APLICACION
            FROM MECA.MECA_MOVIMIENTOS mm
            INNER JOIN MECA.MECA_TIPOS_MOVIMIENTO mt ON mt.TMO_CLAVE = mm.MOV_TMO_CLAVE
        ),
        movimientos_clave AS (
            SELECT mt.*, mcm.CMV_DESCRIPCION
            FROM movimientos_tipo mt
            INNER JOIN MECA.MECA_CLASE_MOVIMIENTOS mcm ON mcm.CMV_CLAVE = mt.MOV_CMV_CLAVE
        ),
        movimientos_con_metodo_de_pago AS (
            SELECT mc.*, mmp.MPA_DESCRIPCION
            FROM movimientos_clave mc
            INNER JOIN MECA.MECA_METODOS_PAGO mmp ON mmp.MPA_CLAVE = mc.MOV_MPA_CLAVE
        ),
        movimiento_con_operaciones AS (
            SELECT mcmdp.*, mo.OPE_INS_CLAVE, mo.OPE_ESTATUS, mo.OPE_FECHA_VENCIMIENTO, mo.OPE_TIPO_PRESTAMO, mo.OPE_TASA_PRESTAMO, mo.OPE_PRECIO_PRESTAMO,
            mo.OPE_PRECIO_PACTADA
            FROM movimientos_con_metodo_de_pago mcmdp
            INNER JOIN MECA.MECA_OPERACIONES mo ON mo.OPE_FOLIO = mcmdp.MOV_FOLIO
        ), 
        movimientos_ope_instrumentos AS (
            SELECT mco.*, mi.INS_DESCRIPCION
            FROM movimiento_con_operaciones mco
            INNER JOIN MECA.MECA_INSTRUMENTOS mi ON mi.INS_CLAVE = mco.OPE_INS_CLAVE
        ), tab_final AS (
         	SELECT cct.*, moi.*
        	FROM CLIENTES_CON_PAIS cct
        	INNER JOIN movimientos_ope_instrumentos moi ON cct.CLI_CLAVE = moi.MOV_CLI_CLAVE
        ) SELECT 
		DESCRIPCIONES NEGOCIO, 
		 CLI_NOMBRE NOMBRE_O_RAZON_SOCIAL,
		 CLI_CLAVE NUMERO_CLIENTE, 
		'VIGENTE' ESTATUS, 
		'' NUMERO_CONTRATO,
		'N/A' GENERO,  
		'' FECHA_NAC_O_CONST, 
		'' ENTIDAD_FEDERATIVA_NACIMIENTO, 
		'' PAIS_DE_NACIMIENTO, 
		CLI_NACIONALIDAD NACIONALIDAD,
		'' PROFESION,
		CLI_DIRECCION CALLE,
		'' NUMERO_EXTERIOR, 
		'' NUMERO_INTERIOR, 
		'' COLONIA_URBANIZACION, 
		'' DELEGACION_MUNICIPIO, 
		'' CIUDAD_POBLACION, 
		EDO_DESCRIPCION ENTIDAD_FEDERATIVA, 
		'' CODIGO_POSTAL, 
		PAI_DESCRIPCION PAIS,
		CLI_TELEFONO TELEFONO, 
		'' CORREO_ELECTRONICO, 
		'' RFC,
		CLI_RFC_LETRAS, CLI_RFC_FECHA, CLI_RFC_HOMO,
		'' CURP, 
		'' FIEL,
		'' REPRESENTANTE_LEGAL,
		'PM' TIPO_PERSONA, 
		TDC_DESCRIPCION TIPO_DE_CLIENTE,
		'' PRODUCTO_CONTRATADO,
		MOV_FOLIO,
		MOV_OPE_FOLIO,
		TMO_DESCRIPCION TIPO_MOVIMIENTO,
		CMV_DESCRIPCION CLASE_MOVIMIENTO,
		INS_DESCRIPCION INSTRUMENTO,
		MOV_NUM_TITULOS,
		MOV_PRECIO,
		MOV_IMPORTE,
		MOV_FECHA_PACTADA,
		MOV_FECHA_PAGO,
		OPE_FECHA_VENCIMIENTO,
		OPE_ESTATUS,
		MOV_FECHA_APLICACION,
		'MECA' SISTEMA_ORIGEN
		FROM tab_final
    """,
    
    "SIMS" : """
    WITH CONTRAPARTE_ACTIVOS AS (
    SELECT *
    	FROM SIMS.SIMS_CONTRAPARTES 
    	WHERE NOMBRE NOT LIKE '%INACTI%' AND NOMBRE NOT LIKE '%APLICA%'
    ), CONTRAPARTE_A_PAISES AS(
    	SELECT CA.*, sp.NOMBRE PAIS
    	FROM CONTRAPARTE_ACTIVOS CA 
    	LEFT JOIN SIMS.SIMS_PAISES sp ON CA.CVE_PAIS = sp.CLAVE
    ), CONTRAPARTE_A_CIUDADES AS (
    	SELECT CTP.*, SC.NOMBRE CIUDAD
    	FROM CONTRAPARTE_A_PAISES CTP 
    	LEFT JOIN SIMS.SIMS_CIUDADES SC ON CTP.CVE_CIUDAD = SC.CLAVE
    ), CONTRAPARTE_OPERACIONES_2024 AS (
        SELECT *
        FROM SIMS.SIMS_MOVIMIENTOS
    ), CONTRAPARTE_TM AS (
        SELECT co.*, svm.DESCRIPCION AS DESCRIPCION_TIPO_MOVIMIENTO -- Alias explícito
        FROM CONTRAPARTE_OPERACIONES_2024 co
        LEFT JOIN SIMS.SIMS_VARIANTES_MOVTOS svm ON co.TIPO_MOVTO = svm.TIPO AND co.VARIANTE_MOVTO = svm.CLAVE
    ), CONTRAPARTE_P AS (
        SELECT
            CT.*, stp.DESCRIPCION AS DESCRIPCION_TIPO_PORTAFOLIO -- Alias explícito
        FROM CONTRAPARTE_TM CT
        INNER JOIN SIMS.SIMS_TIPOS_PORTAFOLIOS stp ON CT.TIPO_PORTAFOLIO = stp.TIPO
    ), CONTRAPARTES_DES_MOVIMIENTOS AS (
    	SELECT CAC.*, CP.*
    	FROM CONTRAPARTE_A_CIUDADES CAC
    	LEFT JOIN CONTRAPARTE_P CP ON CAC.CLAVE = CP.CLAVE_CONTRAPARTE
    )
    SELECT 
    	'' NEGOCIO, 
    	NOMBRE NOMBRE_O_RAZON_SOCIAL,
    	CLAVE NUMERO_CLIENTE, 
    	'VIGENTE' ESTATUS, 
    	'' NUMERO_CONTRATO,
    	'N/A' GENERO,  
    	'' FECHA_NAC_O_CONST, 
    	'' ENTIDAD_FEDERATIVA_NACIMIENTO, 
    	'' PAIS_DE_NACIMIENTO, 
    	'' NACIONALIDAD,
    	'' PROFESION,
    	DIRECCION CALLE,
    	'' NUMERO_EXTERIOR, 
    	'' NUMERO_INTERIOR, 
    	'' COLONIA_URBANIZACION, 
    	'' DELEGACION_MUNICIPIO, 
    	CIUDAD CIUDAD_POBLACION, 
    	CVE_CIUDAD, 
    	'' ENTIDAD_FEDERATIVA, 
    	'' CODIGO_POSTAL, 
    	PAIS,
    	TELEFONO, 
    	FAX CORREO_ELECTRONICO, 
    	'' RFC, 
    	'' CURP, 
    	'' FIEL,
    	'' REPRESENTANTE_LEGAL,
    	'PM' TIPO_PERSONA, 
    	'' PRODUCTO_CONTRATADO, 
    	'SIMS' SISTEMA_ORIGEN,
    	FOLIO, TIPO_MOVTO, DESCRIPCION_TIPO_MOVIMIENTO, TIPO_PORTAFOLIO, DESCRIPCION_TIPO_PORTAFOLIO, FECHA_OPERACION, PRECIO,
    	VALOR_NOMINAL, VALOR_NOMINAL_AMORTIZADO,VALOR_COSTO, INTERESES_ACUMULADOS, MONTO_MOVIMIENTO, CLAVE_CONTRAPARTE, FECHA_LIQUIDACION
    FROM CONTRAPARTES_DES_MOVIMIENTOS
    """, 
    
    "SIPE" : """
    WITH BAN_ACT_DIR AS (
    	SELECT * 
    	FROM SIPE.SIPE_BANCOS sp
    	LEFT JOIN SIPE.SIPE_SUCURSALES_BANCO ssb ON ssb.SUC_BCO_CLAVE= sp.BCO_CLAVE
    	WHERE SP.BCO_ESTATUS = 'A'
    	ORDER BY BCO_CLAVE
    ), TEL_AGRUPADO AS (
    	SELECT 
    	    CTO_SUC_NUMERO,
    	    RTRIM(XMLAGG(XMLELEMENT(e, CTO_TELEFONO || ' -- ').EXTRACT('//text()') ORDER BY CTO_TELEFONO).GetClobVal(), ' -- ') AS CTO_TELEFONOS
    	FROM 
    	    SIPE.SIPE_CONTACTOS sc
    	GROUP BY 
    	    CTO_SUC_NUMERO
    ), BAN_ACT_TEL AS (
    	SELECT BAD.*, TA.CTO_TELEFONOS
    	FROM BAN_ACT_DIR BAD
    	LEFT JOIN TEL_AGRUPADO TA ON BAD.SUC_NUMERO= TA.CTO_SUC_NUMERO
    ),  BAN_CIU AS( 
    	SELECT BAT.*, SC.CDS_NOMBRE
    	FROM BAN_ACT_TEL BAT
    	LEFT JOIN SIPE.SIPE_CIUDADES SC ON (BAT.SUC_CDS_CLAVE = SC.CDS_CLAVE) AND (BAT.SUC_PAI_CLAVE = SC.CDS_PAI_CLAVE) AND (BAT.SUC_EDO_CLAVE = SC.CDS_EDO_CLAVE) 
    ), BAN_EDO AS (
    	SELECT BC.*, SE.EDO_NOMBRE
    	FROM BAN_CIU BC
    	LEFT JOIN SIPE.SIPE_ESTADOS SE ON (BC.SUC_EDO_CLAVE = SE.EDO_CLAVE) AND (BC.SUC_PAI_CLAVE = SE.EDO_PAI_CLAVE)
    ), BAN_PAIS AS (
    	SELECT BE.*, SP.PAI_NOMBRE
    	FROM BAN_EDO BE
    	LEFT JOIN SIPE.SIPE_PAISES SP ON BE.SUC_PAI_CLAVE = SP.PAI_CLAVE
    ), SUC_CUEN_CONT AS ( /*MOVIMIENTOS*/
    	SELECT SSB.SUC_BCO_CLAVE, SSB.SUC_NUMERO, SCC.CIP_TES_CLAVE, SCC.CIP_DIV_CLAVE
    	FROM SIPE.SIPE_SUCURSALES_BANCO SSB
    	LEFT JOIN SIPE.SIPE_CUENTAS_CONTRAPARTE SCC ON SSB.SUC_BCO_CLAVE = SCC.CIP_SUC_NUMERO
    ), CUE_CONT_TES AS(
    	SELECT SCC.*, ST.TES_DESCRIPCION TESORERIA
    	FROM SUC_CUEN_CONT SCC
    	LEFT JOIN SIPE.SIPE_TESORERIAS ST ON SCC.CIP_TES_CLAVE = ST.TES_CLAVE
    ), INVERSIONES_ESTATUS AS (
    	SELECT SIP.*, STS.TST_DESCRIPCION ESTATUS_PRE_INVE
    	FROM SIPE.SIPE_INVERSIONES_PRESTAMOS SIP
    	LEFT JOIN SIPE.SIPE_TIPOS_STATUS STS ON SIP.IPE_TST_CLAVE = STS.TST_CLAVE
    ), CUENTAS_INVERSIONES AS (
    	SELECT CCT.*, IE.IPE_FOLIO, IE.IPE_IMPORTE, IE.IPE_PLAZO, IE.IPE_TASA, IE.IPE_FECHA_VENCIMIENTO, IE.ESTATUS_PRE_INVE
    	FROM CUE_CONT_TES CCT
    	LEFT JOIN INVERSIONES_ESTATUS IE ON (CCT.SUC_NUMERO = IE.IPE_SUC_NUMERO) AND (CCT.CIP_TES_CLAVE = IE.IPE_TES_CLAVE) AND (CCT.CIP_DIV_CLAVE = IE.IPE_DIV_CLAVE)
    ), DETALLES_TIPO_MOVI AS (
    	SELECT SD.*, STM.TMO_DESCRIPCION
    	FROM SIPE.SIPE_DETALLES SD
    	LEFT JOIN SIPE.SIPE_TIPOS_MOVIMIENTO STM ON SD.DET_TMO_CLAVE = STM.TMO_CLAVE 
    ), INVER_DETALLES AS (
    	SELECT CIN.*, DTM.DET_NUMERO, DTM.DET_IPE_FOLIO, DTM.DET_TMO_CLAVE, DTM.TMO_DESCRIPCION TIPO_MOVIMIENTO, DTM.DET_IMPORTE
    	FROM CUENTAS_INVERSIONES CIN
    	LEFT JOIN DETALLES_TIPO_MOVI DTM ON CIN.IPE_FOLIO = DTM.DET_IPE_FOLIO
    ), BANCOS_MOVIMIENTOS AS (
    	SELECT BP.*, INVDET.TESORERIA, INVDET.IPE_FOLIO, INVDET.IPE_IMPORTE, INVDET.DET_IMPORTE, INVDET.IPE_PLAZO, INVDET.IPE_TASA, INVDET.IPE_FECHA_VENCIMIENTO,
    	INVDET.ESTATUS_PRE_INVE,INVDET.TIPO_MOVIMIENTO
    	FROM BAN_PAIS BP
    	LEFT JOIN INVER_DETALLES INVDET ON BP.BCO_CLAVE = INVDET.SUC_BCO_CLAVE
    ) SELECT '' NEGOCIO, 
    	BCO_NOMBRE NOMBRE_O_RAZON_SOCIAL,
    	BCO_CLAVE NUMERO_CLIENTE, 
    	'VIGENTE' ESTATUS, 
    	'' NUMERO_CONTRATO,
    	'N/A' GENERO,  
    	'' FECHA_NAC_O_CONST, 
    	'' ENTIDAD_FEDERATIVA_NACIMIENTO, 
    	'' PAIS_DE_NACIMIENTO, 
    	'' NACIONALIDAD,
    	'' PROFESION,
    	SUC_DIRECCION CALLE,
    	'' NUMERO_EXTERIOR, 
    	'' NUMERO_INTERIOR, 
    	'' COLONIA_URBANIZACION, 
    	'' DELEGACION_MUNICIPIO, 
    	CDS_NOMBRE CIUDAD_POBLACION, 
    	EDO_NOMBRE ENTIDAD_FEDERATIVA, 
    	'' CODIGO_POSTAL, 
    	PAI_NOMBRE PAIS,
    	CTO_TELEFONOS TELEFONO, 
    	'' CORREO_ELECTRONICO, 
    	SUC_RFC RFC, 
    	'N/A' CURP, 
    	'' FIEL,
    	'' REPRESENTANTE_LEGAL,
    	'PM' TIPO_PERSONA, 
    	'' PRODUCTO_CONTRATADO, 
    	TESORERIA, IPE_FOLIO, IPE_IMPORTE, DET_IMPORTE, IPE_PLAZO, IPE_TASA, IPE_FECHA_VENCIMIENTO,
    	ESTATUS_PRE_INVE,TIPO_MOVIMIENTO,
    	'SIPE' SISTEMA_ORIGEN 
    FROM BANCOS_MOVIMIENTOS
    """,
    "SOI"  : """    
     WITH CLIENTES AS (
        SELECT sb.*, sp.PAPAIS
        FROM SOI.SOI_BANCO sb
        INNER JOIN SOI_PAIS sp ON sp.PACVE_PAIS = sb.BACVE_PAIS
        WHERE BA_ACTIVO = 'S'
    ), CLIENTES_SOI_PLAZA AS (
        SELECT clt.*, sp.*
        FROM SOI.SOI_PLAZA sp
        RIGHT JOIN CLIENTES clt ON sp.PLCVE_BANC = clt.BACVE_BANC
    ), CLIENTES_AGRUPADOS AS (
    	SELECT 
    	    BACVE_BANC, 
    	    BANOM_BAN, 
    	    BACVE_PAIS, 
    	    BATIP_BANC, 
    	    BANACIONAL, 
    	    BA_ACTIVO, 
    	    PAPAIS,
    	    LISTAGG(PLPLAZA, ' -- ') WITHIN GROUP (ORDER BY PLPLAZA) AS PLPLAZA,
    	    LISTAGG(PLCVE_PAIS, ' -- ') WITHIN GROUP (ORDER BY PLCVE_PAIS) AS PLCVE_PAIS,
    	    LISTAGG(PLRFC, ' -- ') WITHIN GROUP (ORDER BY PLRFC) AS PLRFC,
    	    LISTAGG(PLDOM_CALLE, ' -- ') WITHIN GROUP (ORDER BY PLDOM_CALLE) AS PLDOM_CALLE,
    	    LISTAGG(PLDOM_NUMERO, ' -- ') WITHIN GROUP (ORDER BY PLDOM_NUMERO) AS PLDOM_NUMERO,
    	    LISTAGG(PLDOM_CIUDAD, ' -- ') WITHIN GROUP (ORDER BY PLDOM_CIUDAD) AS PLDOM_CIUDAD,
    	    LISTAGG(PLDOM_ESTADO, ' -- ') WITHIN GROUP (ORDER BY PLDOM_ESTADO) AS PLDOM_ESTADO,
    	    LISTAGG(PLDOM_CP, ' -- ') WITHIN GROUP (ORDER BY PLDOM_CP) AS PLDOM_CP,
    	    LISTAGG(PL_ACTIVO, ' -- ') WITHIN GROUP (ORDER BY PL_ACTIVO) AS PL_ACTIVO
    	FROM CLIENTES_SOI_PLAZA
    	WHERE PL_ACTIVO = 'S' OR PL_ACTIVO IS NULL OR BANOM_BAN = 'AMSTERDAM-ROTTERDAM BANK.'
    	GROUP BY BACVE_BANC, BANOM_BAN, BACVE_PAIS, BATIP_BANC, BANACIONAL, BA_ACTIVO, PAPAIS
    ), CLIENTES_BAN_LINEA AS ( 
    	SELECT CA.*, SBL.BLNO_LINEA
    	FROM CLIENTES_AGRUPADOS CA
    	LEFT JOIN SOI_BANCO_LIN SBL ON CA.BACVE_BANC = SBL.BLCVE_BANC
    ), CLIENTES_DES_LINEA AS (
    	SELECT CBL.*, sl.*
    	FROM CLIENTES_BAN_LINEA CBL
    	LEFT JOIN SOI.SOI_LINEA sl ON CBL.BLNO_LINEA = sl.LINO_LINEA
    ), CLIENTES_PROD AS (
    	SELECT CDL.*, stc.*
    	FROM CLIENTES_DES_LINEA CDL
    	LEFT JOIN SOI.SOI_TIP_CREDI stc ON CDL.LITIP_CONT = stc.TFTIP_CONT 
    ) SELECT '' NEGOCIO, BANOM_BAN NOMBRE_O_RAZON_SOCIAL,  BACVE_BANC NUMERO_CLIENTE, 'ACTIVO' ESTATUS, 
    'N/A' GENERO, '' FECHA_NAC_O_CONST,  '' ENTIDAD_FEDERATIVA_NACIMIENTO, '' PAIS_DE_NACIMIENTO, 
     BANOM_BAN NACIONALIDAD, '' PROFESION, PLDOM_CALLE CALLE, PLDOM_NUMERO NUMERO_EXTERIOR, '' COLONIA_URBANIZACION, 
     '' DELEGACION_MUNICIPIO, PLDOM_CIUDAD CIUDAD_POBLACION, PLDOM_ESTADO ENTIDAD_FEDERATIVA, PLDOM_CP CODIGO_POSTAL, PAPAIS PAIS, '' TELEFONO,
     '' CORREO, PLRFC RFC, '' CURP, '' FIEL, '' REPRESENTANTE_LEGAL, 'PM' TIPO_PERSONA, 'SOI' SISTEMA_ORIGEN, BLNO_LINEA NUMERO_DE_CONTRATO,
     LIMTO_LIN, LIVIGENCIA, LIFECHAREN, TFDESC_CONT PRODUCTO FROM CLIENTES_PROD
    """,
    "TAS"  : """
    WITH CLIENTES_ACTIVOS AS(
    	SELECT * 
        FROM TAS.CLIENTE cl
        WHERE cl.FBAJA IS NULL
    ), 
    CLIENTES_CON_NA AS(
    	SELECT CA.*, FN.NNACIONALIDAD NACIONALIDAD
    	FROM CLIENTES_ACTIVOS CA
    	INNER JOIN TAS.FNACIONALIDAD FN ON CA.INACIONALIDAD = FN.INACIONALIDAD
    ), 
    CLIENTES_CON_TRANS_2024 AS (
    	SELECT CCN.*, ft.FOPER, ft.FLIQ, ft.IORDEN, ft.ITINSTR ,ft.IINSTR, 
    			ft."U##IEMISION", ft.ISERIE, ft.MBRUTO, ft.MCOSTO, ft.NTITULOS
    	FROM CLIENTES_CON_NA CCN
    	LEFT JOIN TAS.FTRANS ft ON CCN.CUENTA = ft.ICONTRATO
    	WHERE FOPER > TO_DATE('2024-01-01', 'YYYY-MM-DD')
    ), 
    CLIENTES_CON_TIP_INV AS (
    	SELECT CCT.*, tp.DESCRIP TIPO_DE_PERSONA
    	FROM CLIENTES_CON_TRANS_2024 CCT
    	LEFT JOIN TAS.TIPINVER tp ON CCT.TIPINVE = tp.TIPINVE
    )SELECT 
    	'' NEGOCIO, 
    	'' NOMBRE_O_RAZON_SOCIAL,
    	"U##NOMBRE" , NOMBRE, NOMLARGO,
    	CUENTA NUMERO_CLIENTE, 
    	'VIGENTE' ESTATUS, 
    	'' NUMERO_CONTRATO,
    	'' GENERO,  
    	'' FECHA_NAC_O_CONST, 
    	'' ENTIDAD_FEDERATIVA_NACIMIENTO, 
    	'' PAIS_DE_NACIMIENTO, 
    	NACIONALIDAD,
    	IACTIV_ECONO PROFESION,
    	'' CALLE,
    	'' NUMERO_EXTERIOR, 
    	'' NUMERO_INTERIOR, 
    	'' COLONIA_URBANIZACION, 
    	'' DELEGACION_MUNICIPIO, 
    	'' CIUDAD_POBLACION,  
    	'' ENTIDAD_FEDERATIVA, 
    	'' CODIGO_POSTAL, 
    	IREGIONAL PAIS,
    	'' TELEFONO, 
    	TELEFONO1 , TELEFONO2,
    	EMAIL CORREO_ELECTRONICO, 
    	RFC RFC, 
    	'' CURP, 
    	'' FIEL,
    	'' REPRESENTANTE_LEGAL,
    	TIPO_DE_PERSONA TIPO_PERSONA, 
    	'' PRODUCTO_CONTRATADO, 
    	TIPINVE, FOPER, FLIQ, IORDEN, ITINSTR , IINSTR, "U##IEMISION", ISERIE, MBRUTO, MCOSTO, NTITULOS, 
    	'TAS' SISTEMA_ORIGEN
    FROM CLIENTES_CON_TIP_INV
        """,
    
    "SIRAC" : """
     WITH CLT_ACT_X_CONTRATO AS (
    	SELECT cxc.CODIGO_CLIENTE, cxc.NUMERO_CONTRATO, c.FECHA_APERTURA, c.FECHA_VENCIMIENTO, c.MONTO_APROBADO, c.MONTO_DISPONIBLE,  c.CODIGO_LINEA_FINANCIERA
        FROM SIRAC.PR_CONTRATOS_X_CLIENTE cxc
        INNER JOIN SIRAC.PR_CONTRATOS c ON cxc.NUMERO_CONTRATO = c.NUMERO_CONTRATO
        WHERE c.FECHA_VENCIMIENTO > SYSDATE
        ORDER BY FECHA_VENCIMIENTO DESC
    ), CLT_INFO_X_CONTRATO AS (
    	SELECT CAXC.CODIGO_CLIENTE CODIGO, CAXC.NUMERO_CONTRATO, CAXC.FECHA_APERTURA, CAXC.FECHA_VENCIMIENTO, 
    	CAXC.MONTO_APROBADO, CAXC.MONTO_DISPONIBLE,  CAXC.CODIGO_LINEA_FINANCIERA, MG.*
    	FROM CLT_ACT_X_CONTRATO CAXC
    	INNER JOIN SIRAC.MG_CLIENTES MG ON MG.CODIGO_CLIENTE = CAXC.CODIGO_CLIENTE
    ), CLT_INFO_P AS (
    	SELECT CIXC.*, x.NOMBRE PAIS, x.NACIONALIDAD
    	FROM CLT_INFO_X_CONTRATO CIXC
    	LEFT JOIN SIRAC.MG_PAISES x ON CIXC.CODIGO_PAIS = x.CODIGO_PAIS
    ), CLT_INFO_MUN AS (
    	SELECT CIP.*, MM.NOMBRE DELEGACION_MUNICIPIO      
    	FROM CLT_INFO_P CIP
    	LEFT JOIN SIRAC.MG_MUNICIPIOS MM ON  MM.CODIGO_PAIS = CIP.CODIGO_PAIS AND MM.CODIGO_DEPARTAMENTO = CIP.CODIGO_DEPARTAMENTO AND MM.CODIGO_MUNICIPIO = CIP.CODIGO_MUNICIPIO
    ), CLT_INFO_ENT_FED AS (
    	SELECT CIM.*, MD.NOMBRE ENTIDAD_FEDERATIVA     
    	FROM CLT_INFO_MUN CIM
    	LEFT JOIN SIRAC.MG_DEPARTAMENTOS MD ON  MD.CODIGO_PAIS = CIM.CODIGO_PAIS AND MD.CODIGO_DEPARTAMENTO = CIM.CODIGO_DEPARTAMENTO
    ) SELECT 
    	'' NEGOCIO, 
    	'' NOMBRE_O_RAZON_SOCIAL,
    	NOMBRES, PRIMER_APELLIDO, SEGUNDO_APELLIDO, RAZON_SOCIAL, NOMBRE_COMERCIAL,
    	CODIGO_CLIENTE NUMERO_CLIENTE, 
    	'VIGENTE' ESTATUS, 
    	NUMERO_CONTRATO NUMERO_CONTRATO,
    	FECHA_APERTURA, FECHA_VENCIMIENTO, MONTO_APROBADO, MONTO_DISPONIBLE,
    	SEXO GENERO,  
    	FECHA_DE_NACIMIENTO FECHA_NAC_O_CONST, 
    	'' ENTIDAD_FEDERATIVA_NACIMIENTO, 
    	PAIS_NACIMIENTO PAIS_DE_NACIMIENTO, 
    	NACIONALIDAD NACIONALIDAD,
    	CODIGO_PROFESION PROFESION,
    	'' CALLE,
    	'' NUMERO_EXTERIOR, 
    	'' NUMERO_INTERIOR, 
    	'' COLONIA_URBANIZACION, 
    	DELEGACION_MUNICIPIO, 
    	'' CIUDAD_POBLACION, 
    	ENTIDAD_FEDERATIVA ENTIDAD_FEDERATIVA, 
    	'' CODIGO_POSTAL, 
    	PAIS,
    	'' TELEFONO, 
    	'' CORREO_ELECTRONICO, 
    	'' RFC, 
    	RFC_GEN,
    	NUMERO_IDENTIFICACION,
    	NUMERO_IDENTIFICACION_R,
    	CURP, 
    	FIEL,
    	REPRESENTANTE_LEGAL,
    	CODIGO_TIPO_IDENTIFICACION TIPO_PERSONA, 
    	'' PRODUCTO_CONTRATADO, 
    	'SIRAC' SISTEMA_ORIGEN
    FROM CLT_INFO_ENT_FED
    """
}


for database in list_dbs_clt_activos:
    try: 
       get_table(path_exit = path_exit , db = database, name_archivo = f"Transformacion_clientes_{database['NAME']}" , query  = querys_ctls_activos[database["NAME"]])  
    except Exception as error:
        log_file =  os.path.join(path_logs,f"errors_{database['NAME']}_{date_now}.log")
        with open(log_file, 'a') as archivo:
            archivo.write(str(error))